@startuml
'https://plantuml.com/class-diagram

enum StatusEnum {
    ACTIVATE("activate"),
    DISABLED("disabled");
    - final String status;
    StatusEnum(String status);
    + String getStatus();
}

Address <|-- StatusEnum
class Address {
    private Long id;
    private String postCode;
    private String street;
    private String neighborhood;
    private String city;
    private String state;
    private String country;
    private String complement;
    private Long number;
    private Double latitude;
    private Double longitude;
    private StatusEnum statusEnum;
    + Address gets()
    + void sets()
}

School <|-- StatusEnum
class School {
    private Long id;
    private String name;
    private StatusEnum statusEnum;

    + School gets();
    + void sets();
}

SchoolAddress <|-- School
SchoolAddress <|-- Address
class SchoolAddress {
    - Long id;
    - School school;
    - Address address;

    + SchoolAddress gets();
    + void sets();
}

AddressRepository <|-- Address
interface AddressRepository extends JpaRepository<Address, Long> {
}

SchoolRepository <|-- School
interface SchoolRepository extends JpaRepository<School, Long> {
    Optional<School> findByName(String name);
}

SchoolAddressRepository <|-- SchoolAddress
interface SchoolAddressRepository extends JpaRepository<SchoolAddress, Long> {
    List<SchoolAddress> findBySchool_Id(Long schoolId);
}

SchoolDto <|-- School
SchoolDto <|-- StatusEnum
class SchoolDto{
    String name;
    StatusEnum statusEnum;
    + static SchoolDto fromEntity(School school);
}

SchoolAddressServiceImplementation <|-- SchoolAddressRepository
SchoolAddressServiceImplementation <|-- SchoolRepository
SchoolAddressServiceImplementation <|-- AddressRepository
SchoolAddressServiceImplementation <|-- SchoolAddressDto
class SchoolAddressServiceImplementation implements SchoolAddressService {
    - final SchoolAddressRepository schoolAddressRepository;
    - final SchoolRepository schoolRepository;
    - final AddressRepository addressRepository;

    public SchoolAddressServiceImplementation(SchoolAddressRepository schoolAddressRepository, SchoolRepository schoolRepository, AddressRepository addressRepository);
    public ResponseEntity<?> getAllSchoolAddress();
    public List<SchoolAddress> findAddressesBySchool_Id(Long schoolId);
    public ResponseEntity<?> deleteUserAddress(Long userAddressId);
    public ResponseEntity<?> updateSchoolAddress(Long schoolAddressId, SchoolAddressDto updateSchoolAddressDto);
    public ResponseEntity<?> getSchoolAddressById(Long schoolAddressId);
}

SchoolAddressService <|-- SchoolAddressDto
interface SchoolAddressService {
    ResponseEntity<?> getAllSchoolAddress();
    List<SchoolAddress> findAddressesBySchool_Id(Long schoolId);
    ResponseEntity<?> deleteUserAddress(Long userAddressId);
    ResponseEntity<?> updateSchoolAddress(Long schoolAddressId, SchoolAddressDto updateSchoolAddressDto);
    ResponseEntity<?> getSchoolAddressById(Long schoolAddressId);
}

AddressDto <|-- StatusEnum
AddressDto <|-- Address
class AddressDto{
    String postCode;
    String street;
    String neighborhood;
    String city;
    String state;
    String country;
    String complement;
    Long number;
    StatusEnum statusEnum;

    + static AddressDto fromEntity(Address address);
}

AddressController <|-- SchoolAddressService
AddressController <|-- AddressDto
class AddressController {
    - final SchoolAddressService schoolAddressService;

    + AddressController(SchoolAddressService schoolAddressService);
    + ResponseEntity<?> createAddressBySchool(@RequestBody AddressDto addressDto, @PathVariable Long schoolId);
    + ResponseEntity<?> listSchools();
    + ResponseEntity<?> getSchoolAddressById(@PathVariable Long schoolAddressId);
    + ResponseEntity<?> getUserAddressesBySchoolId(@PathVariable Long schoolId);
    + ResponseEntity<?> deleteSchoolAddress(@PathVariable Long schoolAddressId);
    + ResponseEntity<?> updateSchoolAddress(@PathVariable Long schoolAddressId, @Validated @RequestBody SchoolAddressDto updateSchoolAddressDto);
}

@enduml